{"version":3,"sources":["components/layout/Header.jsx","components/homepage/Homepage.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","type","data-toggle","data-target","id","href","aria-labelledby","Component","carouselImages","url","defaultRoutes","path","component","renderCarouselImages","map","image","src","alt","data-ride","this","role","data-slide","aria-hidden","App","routeComponents","key","exact","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRAiDeA,EA/Cf,iLAEQ,OACI,6BACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,qBAAhB,aACA,0BAAMA,UAAU,sCAAhB,SACA,0BAAMA,UAAU,sCAAhB,eAIZ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,yDACX,4BAAQA,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,2BAChF,0BAAMH,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BI,GAAG,0BACzC,wBAAIJ,UAAU,sBACV,wBAAIA,UAAU,iBACV,uBAAGK,KAAK,IAAIL,UAAU,8BAAtB,SAEJ,wBAAIA,UAAU,0BACV,uBAAGK,KAAK,IAAIL,UAAU,6CAA6CI,GAAG,iBAAiBF,cAAY,YAAnG,sBACA,yBAAKF,UAAU,gBAAgBM,kBAAgB,kBAC3C,uBAAGD,KAAK,IAAIL,UAAU,4CAAtB,aACA,uBAAGK,KAAK,IAAIL,UAAU,4CAAtB,eACA,uBAAGK,KAAK,IAAIL,UAAU,4CAAtB,QACA,uBAAGK,KAAK,IAAIL,UAAU,4CAAtB,YAGR,wBAAIA,UAAU,oBACV,uBAAGK,KAAK,IAAIL,UAAU,2BAAtB,aAEJ,wBAAIA,UAAU,oBACV,uBAAGK,KAAK,IAAIL,UAAU,2BAAtB,wBApCpC,GAA4BO,aCAtBC,EAAiB,CAAC,CACpBC,IAAK,8GACP,CACEA,IAAK,iDACP,CACEA,IAAK,mLACP,CACEA,IAAK,+ICJHC,EAAgB,CAAC,CACrBC,KAAM,IACNC,UDKF,2MAEIC,qBAAuB,WACnB,OACIL,EAAeM,IAAI,SAACC,GAChB,OACI,yBAAKf,UAAWQ,EAAe,GAAGC,MAAQM,EAAMN,IAAM,qCAAuC,+BACzF,yBAAKO,IAAKD,EAAMN,IAAKT,UAAU,oBAAoBiB,IAAI,mBACvD,4BAAQhB,KAAK,SAASD,UAAU,mBAAhC,gBARxB,wEAgBQ,OACI,6BACI,yBAAKI,GAAG,YAAYJ,UAAU,iBAAiBkB,YAAU,YACrD,yBAAKlB,UAAU,kBACVmB,KAAKN,wBAEV,uBAAGb,UAAU,wBAAwBK,KAAK,aAAae,KAAK,SAASC,aAAW,QAC5E,0BAAMrB,UAAU,6BAA6BsB,cAAY,SACzD,0BAAMtB,UAAU,WAAhB,aAEJ,uBAAGA,UAAU,wBAAwBK,KAAK,aAAae,KAAK,SAASC,aAAW,QAC5E,0BAAMrB,UAAU,6BAA6BsB,cAAY,SACzD,0BAAMtB,UAAU,WAAhB,eA5BxB,GAA8BO,eCcfgB,E,iLAdX,IAAMC,EAAkBd,EAAcI,IAAI,WAAsBW,GAAtB,IAAGd,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OAA8B,kBAAC,IAAD,CAAOc,OAAK,EAACf,KAAMA,EAAMC,UAAWA,EAAWa,IAAKA,MAC5H,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAME,SAAP,KACE,kBAAC,IAAD,KACGH,S,GARKjB,aCEEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.4e707ef1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"bg-primary-1\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"py-2\">\r\n                            <span className=\"h1 font-grotesque\">ShakaSwim</span>\r\n                            <span className=\"h3 float-right px-1 font-grotesque\">Login</span>\r\n                            <span className=\"h3 float-right px-1 font-grotesque\">Register</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-expand-xl navbar-light\">\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mx-auto\">\r\n                                <li className=\"nav-item px-5\">\r\n                                    <a href=\"#\" className=\"font-grotesque h4 nav-link\">Home</a>\r\n                                </li>\r\n                                <li className=\"nav-item dropdown px-5\">\r\n                                    <a href=\"#\" className=\"dropdown-toggle font-grotesque h4 nav-link\" id=\"navbarDropdown\" data-toggle=\"dropdown\">Shop by Categories</a>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                        <a href=\"#\" className=\"dropdown-item font-grotesque h4 nav-link\">One Piece</a>\r\n                                        <a href=\"#\" className=\"dropdown-item font-grotesque h4 nav-link\">Bikini Sets</a>\r\n                                        <a href=\"#\" className=\"dropdown-item font-grotesque h4 nav-link\">Tops</a>\r\n                                        <a href=\"#\" className=\"dropdown-item font-grotesque h4 nav-link\">Bottom</a>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item px-5 h4\">\r\n                                    <a href=\"#\" className=\"font-grotesque nav-link\">About us</a>\r\n                                </li>\r\n                                <li className=\"nav-item px-5 h4\">\r\n                                    <a href=\"#\" className=\"font-grotesque nav-link\">Contact us</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\n\r\nconst carouselImages = [{\r\n    url: \"https://www.wallpaperup.com/uploads/wallpapers/2016/11/25/1053489/5803ec746e1cd2825130aadc109474aa-700.jpg\"\r\n},{\r\n    url: \"https://images.alphacoders.com/876/876549.jpg\"\r\n},{\r\n    url: \"https://sites.google.com/site/hotbikinimodelswallpapers/_/rsrc/1472872608888/bikini-model-wallpaper-012/bikini-model-wallpaper-142/Sexy%20Hot%20Bikini%20Wallpaper%20-b-242.jpg\"\r\n},{\r\n    url: \"http://elitewallpapers.weebly.com/uploads/6/0/5/6/6056927/lyndall_jarvis_wallpaper_5_sports_illustrated_swimsuit_south_africa_1366x768.jpg\"\r\n}]\r\n\r\nexport class Homepage extends Component {\r\n\r\n    renderCarouselImages = () => {\r\n        return (\r\n            carouselImages.map((image) => {\r\n                return (\r\n                    <div className={carouselImages[0].url === image.url ? \"carousel-item active carousel-crop\" : \"carousel-item carousel-crop\"}>\r\n                        <img src={image.url} className=\"w-100 text-center\" alt=\"carousel_image\" />\r\n                        <button type=\"button\" className=\"btn btn-success\">Shop Now</button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"carousel1\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\">\r\n                        {this.renderCarouselImages()}\r\n                    </div>\r\n                    <a className=\"carousel-control-prev\" href=\"#carousel1\" role=\"button\" data-slide=\"prev\">\r\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next\" href=\"#carousel1\" role=\"button\" data-slide=\"next\">\r\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage\r\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Homepage from './components/homepage/Homepage'\n\nconst defaultRoutes = [{\n  path: '/',\n  component: Homepage\n}]\n\nclass App extends Component{\n  render(){\n    const routeComponents = defaultRoutes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />);\n    return(\n      <Router>\n        <Header />\n        <React.Fragment>\n          <Switch>\n            {routeComponents}\n          </Switch>\n        </React.Fragment>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}